name: Version Bump

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      bump:
        description: 'Which part to bump? (major, minor, patch)'
        required: false
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  bump-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Git user
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Get current version
        id: get_version
        run: |
          echo "version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT

      - name: Bump version
        id: bump
        run: |
          bump=${{ github.event.inputs.bump || 'patch' }}
          version=${{ steps.get_version.outputs.version }}
          IFS='.' read -r major minor patch <<< "${version%%-*}"
          if [ "$bump" = "major" ]; then
            major=$((major+1)); minor=0; patch=0
          elif [ "$bump" = "minor" ]; then
            minor=$((minor+1)); patch=0
          else
            patch=$((patch+1))
          fi
          new_version="$major.$minor.$patch"
          mvn --batch-mode versions:set -DnewVersion=$new_version
          echo "new_version=$new_version" >> $GITHUB_OUTPUT

      - name: Commit version bump
        run: |
          git add pom.xml
          git commit -m "chore: bump version to ${{ steps.bump.outputs.new_version }} [skip ci]" || echo "No changes to commit"
          git push

      - name: Generate changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          configuration: .github/changelog-configuration.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.bump.outputs.new_version }}
          name: Release v${{ steps.bump.outputs.new_version }}
          body: ${{ steps.changelog.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 