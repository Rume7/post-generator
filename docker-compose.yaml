version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: post-generator-app
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/post-gen-db
      - SPRING_DATASOURCE_USERNAME=${DB_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    ports:
      - "8080:8080"
    networks:
      - post-generator-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: 'postgres:16-alpine'
    container_name: post-generator-db
    environment:
      - POSTGRES_DB=post-gen-db
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - post-generator-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d post-gen-db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

networks:
  post-generator-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
